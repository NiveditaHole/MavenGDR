<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-13T04:35:52 EST" name="TestNG" finished-at="2020-02-13T04:36:54 EST" duration-ms="62818">
    <groups>
    </groups>
    <test started-at="2020-02-13T04:35:52 EST" name="TestNG" finished-at="2020-02-13T04:36:54 EST" duration-ms="62818">
      <class name="Example.LoginFunctionality">
        <test-method is-config="true" signature="setup()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:35:51 EST" name="setup" finished-at="2020-02-13T04:35:52 EST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:35:52 EST" name="Login" finished-at="2020-02-13T04:36:01 EST" duration-ms="9502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="CheckInvalidEmailId()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:01 EST" name="CheckInvalidEmailId" finished-at="2020-02-13T04:36:01 EST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckInvalidEmailId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:01 EST" name="getResult" finished-at="2020-02-13T04:36:02 EST" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckInvalidEmailId status=SUCCESS method=LoginFunctionality.CheckInvalidEmailId()[pri:0, instance:Example.LoginFunctionality@515aebb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:02 EST" name="Login" finished-at="2020-02-13T04:36:12 EST" duration-ms="9719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="CheckValidEmailId()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:12 EST" name="CheckValidEmailId" finished-at="2020-02-13T04:36:12 EST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckValidEmailId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:12 EST" name="getResult" finished-at="2020-02-13T04:36:13 EST" duration-ms="650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckValidEmailId status=SUCCESS method=LoginFunctionality.CheckValidEmailId()[pri:0, instance:Example.LoginFunctionality@515aebb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:13 EST" name="Login" finished-at="2020-02-13T04:36:25 EST" duration-ms="12357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginBlankdata()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:25 EST" name="LoginBlankdata" finished-at="2020-02-13T04:36:25 EST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginBlankdata -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:25 EST" name="getResult" finished-at="2020-02-13T04:36:26 EST" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginBlankdata status=SUCCESS method=LoginFunctionality.LoginBlankdata()[pri:0, instance:Example.LoginFunctionality@515aebb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:26 EST" name="Login" finished-at="2020-02-13T04:36:43 EST" duration-ms="16742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginEmailID()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:43 EST" name="LoginEmailID" finished-at="2020-02-13T04:36:44 EST" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginEmailID -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:44 EST" name="getResult" finished-at="2020-02-13T04:36:44 EST" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginEmailID status=SUCCESS method=LoginFunctionality.LoginEmailID()[pri:0, instance:Example.LoginFunctionality@515aebb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:44 EST" name="Login" finished-at="2020-02-13T04:36:53 EST" duration-ms="8906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginwithValidData()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:53 EST" name="LoginwithValidData" finished-at="2020-02-13T04:36:54 EST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginwithValidData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:54 EST" name="getResult" finished-at="2020-02-13T04:36:54 EST" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginwithValidData status=SUCCESS method=LoginFunctionality.LoginwithValidData()[pri:0, instance:Example.LoginFunctionality@515aebb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Example.LoginFunctionality@515aebb0]" started-at="2020-02-13T04:36:54 EST" name="tearDown" finished-at="2020-02-13T04:36:55 EST" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Example.LoginFunctionality -->
    </test> <!-- TestNG -->
  </suite> <!-- TestNG -->
</testng-results>
