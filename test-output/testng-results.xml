<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-20T04:37:14 GMT-05:00" name="Default suite" finished-at="2020-02-20T04:38:05 GMT-05:00" duration-ms="50985">
    <groups>
    </groups>
    <test started-at="2020-02-20T04:37:14 GMT-05:00" name="Default test" finished-at="2020-02-20T04:38:05 GMT-05:00" duration-ms="50985">
      <class name="Example.LoginFunctionality">
        <test-method is-config="true" signature="setup()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:14 GMT-05:00" name="setup" finished-at="2020-02-20T04:37:14 GMT-05:00" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:14 GMT-05:00" name="Login" finished-at="2020-02-20T04:37:25 GMT-05:00" duration-ms="10668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="CheckInvalidEmailId()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:25 GMT-05:00" name="CheckInvalidEmailId" finished-at="2020-02-20T04:37:25 GMT-05:00" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckInvalidEmailId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:25 GMT-05:00" name="getResult" finished-at="2020-02-20T04:37:25 GMT-05:00" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckInvalidEmailId status=SUCCESS method=LoginFunctionality.CheckInvalidEmailId()[pri:0, instance:Example.LoginFunctionality@1ffe63b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:25 GMT-05:00" name="Login" finished-at="2020-02-20T04:37:34 GMT-05:00" duration-ms="9253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="CheckValidEmailId()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:34 GMT-05:00" name="CheckValidEmailId" finished-at="2020-02-20T04:37:34 GMT-05:00" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckValidEmailId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:34 GMT-05:00" name="getResult" finished-at="2020-02-20T04:37:34 GMT-05:00" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckValidEmailId status=SUCCESS method=LoginFunctionality.CheckValidEmailId()[pri:0, instance:Example.LoginFunctionality@1ffe63b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:34 GMT-05:00" name="Login" finished-at="2020-02-20T04:37:44 GMT-05:00" duration-ms="9540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginBlankdata()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:44 GMT-05:00" name="LoginBlankdata" finished-at="2020-02-20T04:37:44 GMT-05:00" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginBlankdata -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:44 GMT-05:00" name="getResult" finished-at="2020-02-20T04:37:44 GMT-05:00" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginBlankdata status=SUCCESS method=LoginFunctionality.LoginBlankdata()[pri:0, instance:Example.LoginFunctionality@1ffe63b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:44 GMT-05:00" name="Login" finished-at="2020-02-20T04:37:54 GMT-05:00" duration-ms="9500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginEmailID()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:54 GMT-05:00" name="LoginEmailID" finished-at="2020-02-20T04:37:55 GMT-05:00" duration-ms="872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginEmailID -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:55 GMT-05:00" name="getResult" finished-at="2020-02-20T04:37:55 GMT-05:00" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginEmailID status=SUCCESS method=LoginFunctionality.LoginEmailID()[pri:0, instance:Example.LoginFunctionality@1ffe63b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Login()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:37:55 GMT-05:00" name="Login" finished-at="2020-02-20T04:38:04 GMT-05:00" duration-ms="9756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="LoginwithValidData()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:38:04 GMT-05:00" name="LoginwithValidData" finished-at="2020-02-20T04:38:05 GMT-05:00" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginwithValidData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:38:05 GMT-05:00" name="getResult" finished-at="2020-02-20T04:38:05 GMT-05:00" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginwithValidData status=SUCCESS method=LoginFunctionality.LoginwithValidData()[pri:0, instance:Example.LoginFunctionality@1ffe63b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Example.LoginFunctionality@1ffe63b9]" started-at="2020-02-20T04:38:05 GMT-05:00" name="tearDown" finished-at="2020-02-20T04:38:05 GMT-05:00" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Example.LoginFunctionality -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
